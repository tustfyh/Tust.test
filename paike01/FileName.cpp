#include<stdio.h>
#include<stdlib.h>
#include<time.h>
typedef struct student
{
	int xuehao;
	int arr[3];
}STU;
typedef struct classroom {

	int Class[7][54];
}classroom;
typedef struct Count {

	int count[3];

}Count;
int main()
{
	srand(time(NULL));
	int xuanke[870] = {1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,2,3,5,1,2,6,1,2,5,1,2,3,1,2,5,1,5,6,1,2,6,1,2,5,1,5,6,1,3,6,1,2,3,1,3,6,1,2,6,1,2,3,1,2,6,2,4,6,1,2,3,1,2,5,1,3,5,1,3,6,1,2,6,1,2,6,1,2,5,1,2,3,1,2,3,1,2,6,1,2,3,4,5,6,2,3,4,1,2,4,2,3,5,1,2,6,2,3,6,4,5,6,1,3,5,1,2,3,1,2,6,1,2,3,1,2,6,1,2,3,4,5,6,4,5,6,1,2,4,1,2,6,1,3,6,3,4,5,1,2,4,1,3,6,3,4,6,1,2,6,4,5,6,2,4,5,3,4,5,3,5,6,1,2,3,3,4,5,1,2,5,2,3,6,4,5,6,1,2,5,1,3,5,1,2,6,1,2,6,4,5,6,1,2,6,1,2,5,4,5,6,1,2,3,3,4,5,1,2,5,1,5,6,1,2,3,1,2,5,1,2,3,4,5,6,1,2,3,1,2,4,1,3,5,4,5,6,1,2,5,3,4,5,1,2,6,1,2,5,1,2,3,1,2,3,1,2,3,1,2,5,3,4,5,1,2,4,1,2,5,3,4,5,1,2,6,1,2,5,1,2,3,3,4,5,1,2,6,1,2,6,1,2,5,3,4,6,4,5,6,1,2,4,3,4,5,1,3,5,1,2,3,1,2,6,4,5,6,1,2,3,1,3,6,1,2,3,1,2,3,1,2,3,1,4,6,1,2,6,1,2,3,1,2,3,2,3,4,3,4,5,4,5,6,1,2,3,1,2,5,4,5,6,1,2,5,1,2,6,1,2,5,4,5,6,4,5,6,1,2,6,4,5,6,3,5,6,1,2,6,1,4,6,4,5,6,2,4,5,1,2,3,1,2,6,1,2,3,4,5,6,1,4,5,1,2,5,1,2,3,2,4,5,1,2,3,3,4,6,3,4,6,1,2,3,3,4,5,1,2,3,4,5,6,1,2,5,1,2,3,1,5,6,3,4,6,1,2,5,1,2,6,4,5,6,1,2,4,4,5,6,3,4,5,4,5,6,4,5,6,1,2,5,1,2,5,3,4,5,4,5,6,2,3,5,3,4,5,1,2,3,1,3,5,4,5,6,2,3,5,3,4,6,4,5,6,1,2,6,1,2,3,1,5,6,3,4,5,1,2,5,4,5,6,1,2,3,4,5,6,1,2,3,1,3,5,1,2,3,1,2,5,1,2,5,1,2,3,4,5,6,1,2,6,3,4,6,4,5,6,3,4,5,1,2,6,1,2,5,4,5,6,1,2,3,1,2,6,1,2,6,2,4,5,1,2,3,1,2,3,1,2,3,4,5,6,1,2,5,1,2,6,1,2,6,1,2,6,1,2,6,4,5,6,1,2,6,1,2,4,4,5,6,2,4,5,1,2,5,1,2,3,3,5,6,1,5,6,1,2,5,4,5,6,4,5,6,1,2,3,1,2,5,1,2,3,1,2,6,1,2,3,1,2,3,4,5,6,1,2,5,4,5,6,1,2,3,1,2,3,4,5,6,1,2,3,1,2,3,1,2,6,3,4,5,2,5,6,1,2,3,4,5,6,1,2,3,3,4,5,1,3,4,1,2,3,3,4,5,4,5,6,3,4,5,1,2,5,1,2,5,4,5,6,1,2,6,4,5,6,3,4,5,3,4,5,1,2,3,1,2,3,1,3,5,1,2,5,4,5,6,3,4,5,1,2,6,1,2,6,1,2,5,4,5,6,4,5,6,1,2,5,4,5,6,1,4,5,3,4,6,1,2,6,3,4,5,4,5,6,4,5,6,1,2,5,1,2,6,1,2,4,1,2,3,3,4,5,4,5,6,1,2,3,1,3,6,4,5,6,1,2,5,1,3,4};

	STU s[290];
	classroom c[3];
	Count c1[7] = {0};
	for (int i = 0; i < 290; i++)
	{
		if (i>=23)
		{
			s[i].xuehao = i + 2;
		}
		else
		{
			s[i].xuehao = i + 1;
		}
		
		for ( int j = 1; j <=3; j++)
		{
			s[i].arr[j - 1] = xuanke[(i + 1) * j-1];
		}
	}
	for (int i = 0; i < 290; i++)
	{
		int j = 0;
		while (1)
		{
			
			int name = (rand() % (s[i].arr[2])) + 1;
			if (j==0)
			{
				s[i].arr[j] = name;
				j++;
			}
			else if (j==1)
			{
				if (s[i].arr[j-1]!=name)
				{
					s[i].arr[j] = name;
					j++;
				}
			}
			else
			{
				if (s[i].arr[j - 1] != name && s[i].arr[j - 2] != name)
				{
					s[i].arr[j] = name;
					break;
				}
			}
		}
	}
	while (1)
	{
		
		for (int n = 0; n < 3; n++)
		{
			
			for (int k = 0; k < 290; k++)
			{
				switch (s[k].arr[n])
				{
				case 1:
					if (c1[0].count[n]<40)
					{
						c[n].Class[0][c1[0].count[n]] = k+1;
						c1[0].count[n]++;
						break;
					}
					else if (c1[0].count[n]>=40&& n==0)
					{
						c[n].Class[6][c1[6].count[n]] = k+1;
						c1[6].count[n]++;
						break;
					}
					else
					{
						c[n].Class[0][c1[0].count[n]] = k + 1;
						c1[0].count[n]++;
						break;
					}
				case 2:
					if (c1[1].count[n]<40)
					{
						c[n].Class[1][c1[1].count[n]] = k+1;
						c1[1].count[n]++;
						break;
					}
					else if (c1[1].count[n]>=40 && n==1 )
					{
						c[n].Class[6][c1[6].count[n]] = k+1;
						c1[6].count[n]++;
						break;
					}
					else
					{
						c[n].Class[1][c1[1].count[n]] = k + 1;
						c1[1].count[n]++;
						break;
					}
				case 3:
					c[n].Class[2][c1[2].count[n]] = k+1;
					c1[2].count[n]++;
					break;
				case 4:
					if (c1[3].count[n]<40)
					{
						c[n].Class[3][c1[3].count[n]] = k+1;
						c1[3].count[n]++;
						break;
					}
					else if (c1[3].count[n] >= 40 && n==2)
					{
						c[n].Class[6][c1[6].count[n]] = k+1;
						c1[6].count[n]++;
						break;
					}
					else
					{
						c[n].Class[3][c1[3].count[n]] = k + 1;
						c1[3].count[n]++;
						break;
					}
				case 5:
					c[n].Class[4][c1[4].count[n]] = k+1;
					c1[4].count[n]++;
					break;
				case 6:
					c[n].Class[5][c1[5].count[n]] = k+1;
					c1[5].count[n]++;
					break;


				}
			}
		}
	
		break;
	}

	return 0;
}